// Expected{{ .Name }} represents an expectation for a call to {{if .DBMethod}}DB.{{end}}{{.Name}}().
type Expected{{ .Name }} struct {
	commonExpectation
{{ .VariableDefinitions 1 }}
}
{{ if .AcceptsOptions }}
// WithOptions sets the expected options for the call to {{if .DBMethod}}DB.{{end}}{{.Name}}().
func (e *Expected{{.Name}}) WithOptions(options map[string]interface{}) *Expected{{.Name}} {
	e.options = options
	return e
}
{{ end }}
{{- if ne (len .Returns) 0 }}
// WillReturn sets the values that will be returned by the call to {{if .DBMethod}}DB.{{end}}{{.Name}}().
func (e *Expected{{.Name}}) WillReturn({{.ReturnTypes}}) *Expected{{.Name}} {
{{- range $i, $discard := .Returns }}
	e.ret{{$i}} = ret{{$i}}
{{- end }}
	return e
}
{{ end }}
{{- if .ReturnsError }}
// WillReturnError sets the error value that will be returned by the call to {{if .DBMethod}}DB.{{end}}{{.Name}}().
func (e *Expected{{.Name}}) WillReturnError(err error) *Expected{{.Name}} {
	e.err = err
	return e
}
{{ end }}
{{- if .AcceptsContext }}
// WillDelay causes the call to {{if .DBMethod}}DB.{{end}}{{.Name}}() to delay.
func (e *Expected{{.Name}}) WillDelay(delay time.Duration) *Expected{{.Name}} {
	e.delay = delay
	return e
}
{{ end }}
